#################################################################
##               ILPOptimizer | Tom Daniek | 2016              ##
## Artificial Intelligence | Intelligent Systems Design | HSHL ##
#################################################################

=================================================================
==                    Booting ILPOptimizer..                   ==
=================================================================

## Reading and Converting Document.. ##
Debug: FileReader: min:+1*x0+3*x1+3*x2+5*x3+2*x4
Debug: FileReader: +1*x0+1*x1+1*x2+4*x3+5*x4>=5
Debug: FileReader: +4*x0+1*x1+4*x2+3*x3+3*x4>=9
Debug: FileReader: +5*x0+1*x1+1*x2+4*x3+4*x4>=15

## Feeding information to Equation System.. ##
Debug: LESCreator: Found Objective Function
Debug: LESCreator: Min
Debug: LESCreator: [1, 3, 3, 5, 2]
Debug: LESCreator: Found constraint
Debug: LESCreator: [1, 1, 1, 4, 5]
Debug: LESCreator: [5]
Debug: LESCreator: Found constraint
Debug: LESCreator: [4, 1, 4, 3, 3]
Debug: LESCreator: [9]
Debug: LESCreator: Found constraint
Debug: LESCreator: [5, 1, 1, 4, 4]
Debug: LESCreator: [15]

## Creating Matrix.. ##
Debug: 
Debug:           0      1      2      3      4      5
Debug:    Constraints
Debug:   0 [     1,     1,     1,     4,     5,     5]
Debug:   1 [     4,     1,     4,     3,     3,     9]
Debug:   2 [     5,     1,     1,     4,     4,    15]
Debug:    Objective Function
Debug:   3 [     1,     3,     3,     5,     2,     0]

## Transposing Matrix.. ##
Debug: 
Debug:           0      1      2      3
Debug:    Constraints
Debug:   0 [     1,     4,     5,     1]
Debug:   1 [     1,     1,     1,     3]
Debug:   2 [     1,     4,     1,     3]
Debug:   3 [     4,     3,     4,     5]
Debug:   4 [     5,     3,     4,     2]
Debug:    Objective Function
Debug:   5 [     5,     9,    15,     0]

## Adding Slack Variables.. ##
Debug: 
Debug:           0      1      2      3      4      5      6      7      8
Debug:    Constraints
Debug:   0 [     1,     4,     5,     1,     0,     0,     0,     0,     1]
Debug:   1 [     1,     1,     1,     0,     1,     0,     0,     0,     3]
Debug:   2 [     1,     4,     1,     0,     0,     1,     0,     0,     3]
Debug:   3 [     4,     3,     4,     0,     0,     0,     1,     0,     5]
Debug:   4 [     5,     3,     4,     0,     0,     0,     0,     1,     2]
Debug:    Objective Function
Debug:   5 [     5,     9,    15,     0,     0,     0,     0,     0,     0]

=================================================================
==                      Doing the Simplex..                    ==
=================================================================

## 1. Simplex Iteration: ##

## Searching Pivot Values.. ##
Debug: Pivot: PivotColumn = 2
Debug: Pivot: PivotRow = 0
Debug: Pivot: PivotElementValue = 5.000000

## Dividing PivotRow by PivotElement Value.. ##
Debug: 
Debug:           0      1      2      3      4      5      6      7      8
Debug:    Constraints
Debug:   0 [ 0.2, 0.8,     1, 0.2,     0,     0,     0,     0, 0.2]
Debug:   1 [     1,     1,     1,     0,     1,     0,     0,     0,     3]
Debug:   2 [     1,     4,     1,     0,     0,     1,     0,     0,     3]
Debug:   3 [     4,     3,     4,     0,     0,     0,     1,     0,     5]
Debug:   4 [     5,     3,     4,     0,     0,     0,     0,     1,     2]
Debug:    Objective Function
Debug:   5 [     5,     9,    15,     0,     0,     0,     0,     0,     0]

## Making every Element in PivotColumn equal zero.. ##
Debug: 
Debug:           0      1      2      3      4      5      6      7      8
Debug:    Constraints
Debug:   0 [ 0.2, 0.8,     1, 0.2,     0,     0,     0,     0, 0.2]
Debug:   1 [ 0.8, 0.2,     0,-0.2,     1,     0,     0,     0, 2.8]
Debug:   2 [ 0.8, 3.2,     0,-0.2,     0,     1,     0,     0, 2.8]
Debug:   3 [ 3.2,-0.2,     0,-0.8,     0,     0,     1,     0, 4.2]
Debug:   4 [ 4.2,-0.2,     0,-0.8,     0,     0,     0,     1, 1.2]
Debug:    Objective Function
Debug:   5 [     2,    -3,     0,    -3,     0,     0,     0,     0,    -3]

Simplex: The result after this iteration equals -3.000000.


## 2. Simplex Iteration: ##

## Searching Pivot Values.. ##
Debug: Pivot: PivotColumn = 0
Debug: Pivot: PivotRow = 4
Debug: Pivot: PivotElementValue = 4.200000

## Dividing PivotRow by PivotElement Value.. ##
Debug: 
Debug:           0      1      2      3      4      5      6      7      8
Debug:    Constraints
Debug:   0 [ 0.2, 0.8,     1, 0.2,     0,     0,     0,     0, 0.2]
Debug:   1 [ 0.8, 0.2,     0,-0.2,     1,     0,     0,     0, 2.8]
Debug:   2 [ 0.8, 3.2,     0,-0.2,     0,     1,     0,     0, 2.8]
Debug:   3 [ 3.2,-0.2,     0,-0.8,     0,     0,     1,     0, 4.2]
Debug:   4 [     1,-0.0476,     0,-0.19,     0,     0,     0, 0.238, 0.286]
Debug:    Objective Function
Debug:   5 [     2,    -3,     0,    -3,     0,     0,     0,     0,    -3]

## Making every Element in PivotColumn equal zero.. ##
Debug: 
Debug:           0      1      2      3      4      5      6      7      8
Debug:    Constraints
Debug:   0 [     0, 0.81,     1, 0.238,     0,     0,     0,-0.0476, 0.143]
Debug:   1 [     0, 0.238,     0,-0.0476,     1,     0,     0,-0.19, 2.57]
Debug:   2 [     0, 3.24,     0,-0.0476,     0,     1,     0,-0.19, 2.57]
Debug:   3 [     0,-0.0476,     0,-0.19,     0,     0,     1,-0.762, 3.29]
Debug:   4 [     1,-0.0476,     0,-0.19,     0,     0,     0, 0.238, 0.286]
Debug:    Objective Function
Debug:   5 [     0,-2.9,     0,-2.62,     0,     0,     0,-0.476,-3.57]

Simplex: The result after this iteration equals -3.571429.

=================================================================
==                      Found a Solution!                      ==
=================================================================

Solution: Needed 2 Iterations!

Solution: Min = 3.57142857142857

Solution: x0= 0.142857142857143
Solution: x1= 2.57142857142857
Solution: x2= 2.57142857142857
Solution: x3= 3.28571428571429
Solution: x4= 0.285714285714286

## Everything was successful ##

Logger: Found 0 Warnings and 0 Errors.

Needed 0.000000 seconds for whole computation.

